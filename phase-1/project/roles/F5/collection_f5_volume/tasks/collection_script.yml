---
# Uses blockinfile to build a script dynamically on the device.  This regretably puts a requirement to have a
# mirrored ssh host for each device.  There are other ways to do this to avoid this dependency.
- name: "Write out data collection script"
  blockinfile:
    create: yes
    path: '{{script_file}}'
    content:  |

      OLDIFS="$IFS"
      IFS=$'\n'
      disk=$(/bin/tmsh show sys sof status | awk '/.D[1-9]/{print substr($1,1,4)}' | head -n1)
      maxvnumber=0

      for vnumber in $(/bin/tmsh show sys sof status | grep complete)
      do

      vnumber=${vnumber:4:2}
      vnumber=${vnumber// /}

      if (( vnumber > maxvnumber )); then
      maxvnumber=$vnumber
      fi
      done

      volume=$disk$((maxvnumber + 3))
      echo -n $volume
      IFS="$OLDIFS"
      EOF

# Easier to add a shell tag after the fact.  S imple hack to accomplish this.
- name: "Add shell tag"
  lineinfile:
    path: '{{script_file}}'
    insertbefore: '^# BEGIN ANSIBLE MANAGED BLOCK'
    line: '#!/bin/bash'

# Self explanatory, runs the script and collects the output.  It may be advisable to put some crumple zones
# around this as weird issues and errors are not going to be gracefully handled or discovered.
- name: "Run Script"
  shell: 'bash {{script_file}}'
  register: temp

- debug:
    var: temp