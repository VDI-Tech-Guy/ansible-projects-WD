---
- name: BIG-IP Upload and Install Update
  hosts: lb
  connection: local
  gather_facts: false

  tasks:
    # This playbook has some regretable gynamatics but it does resolve.  There are some dependencies to note:
    # 1. trusted_checksum is set by looking at the mounted repo and looking for the images' md5 file.  This
    # means that when you upload an iso you HAVE to upload its requisite md5 file otherwise the checksum check
    # will fail and the playbook will throw as well.
    # 2. calc_checksum is generated on the target device.  It would be better if the return value from the 
    # previous task could be used to do this, but I had no luck getting that to work.  Some manipulation is 
    # also required to get just the checksum as with the md5 file.
    # 3. Print Checksums is not entirely necessary, but is nice to get an output that verifies the match or 
    # mismatch
    # 4. The two last tasks make use of f5_image and new_volume are set in the template of awx.  This is done
    # so its easy to manipulate within awx if it needs to be changed rather than modifying it in source code
    # and then having to sync everything which is less reliable.
    - name: Setup provider
      set_fact:
        provider:
          server: "{{private_ip}}"
          user: "{{ansible_user}}"
          password: "{{ansible_password}}"
          server_port: 443
          validate_certs: false
          no_f5_teem: false
        trusted_checksum: "{{lookup('file', '{{repo_path}}/{{f5_image}}.md5').split(' ').0}}"

    - name: Upload image to device
      bigip_software_image:
        image: '{{repo_path}}/{{f5_image}}'
        provider: "{{provider}}"
      delegate_to: localhost
 
    - name: Get checksum
      bigip_command:
        provider: "{{provider}}"
        commands: 'run /util bash -c "md5sum /shared/images/{{f5_image}}"'
      delegate_to: localhost
      register: calc_checksum
      failed_when: calc_checksum.stdout.0.split(' ').0 != trusted_checksum
      
    - name: Print Checksums
      debug:
        msg: 
          - "calulated md5sum is {{calc_checksum.stdout.0.split(' ').0}}"
          -  "trusted md5sum is {{trusted_checksum}}"

    - name: Ensure an existing image is installed in specified volume
      bigip_software_install:
        image: '{{f5_image}}'
        volume: "{{new_volume}}"
        state: installed
        provider: "{{provider}}"
      delegate_to: localhost

    - name: Activate the new image and reboot into that volume
    # For some reason this doesn't activate or reboot the system.  Issue #2374 has been opened to investigate
    # Response on #2374 is they are not going to fix it and NEXT will be great.
      bigip_software_install:
        image: '{{f5_image}}'
        volume: '{{new_volume}}'
        state: activated
        provider: "{{provider}}"
      delegate_to: localhost

    